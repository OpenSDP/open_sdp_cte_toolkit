
<span class="stcmt">// Comments about this code</span>

<span class="stcmt">// Data for this analysis code should be set up according to the accompanying data specification guide.</span>

<span class="stcmt">// Code below for this analyis should be modified according to your needs. In some places, comments explicitly prompt you to appropriately modify a minimum number of commands for your institution's data, or else the output may not be correct or useful. And of course feel free to modify any other commands, too.	</span>

<span class="stcmt">// Stata version 16 or higher is required to run the code below because of the frames commands. Earliear versions of Stata do not allow for different frames. If you do not have access to version 16, you can modify the appropriate commands to use tempfiles instead and achieve a similar result.			</span>

<span class="stcmt">// Set up and setting filepaths</span>

version 16.1

clear all

macro drop all		
	
<span class="stcmt">// set path to your saved .csv data file matching spec document</span>

global path_to_data "some_directory/perhaps_another_directory/maybe_even_one_more_directory/your_data.csv" 

<span class="stcmt">// set path for where you'd like graphs saved on your computer		</span>

global saved_graphs "some_directory/perhaps_another_directory/finally_the_directory_where_you_would_like_your_graphs_saved"

<span class="stcmt">// Load data set up according to spec</span>

import delimited "${path_to_data}", clear		

<span class="stcmt">// Generate and label an entry pathway</span>

<span class="stcmt">// Generate an entry pathway code for each student</span>

bys studentid (cohorttermindex): gen entry_pathway = pathway[1]

label var entry_pathway "pathway code associated with a student at entry"	

<span class="stcmt">// Label pathway</span>

label define pathway_entry_vals 1 "Some Pathway" 2 "Another Pathway" 3 "One More Pathway" <span class="stcmt">// this is just a placeholder example; please modify with the full names associated with each entry pathway code at your institution</span>

label values pathway pathway_entry_vals		

<span class="stcmt">// A few additional calculations to complement initial data file</span>

<span class="stcmt">// Generate cumulative college-level credits earned by term</span>

bys studentid (cohorttermindex): gen cumcollegecreditsearned = sum(collegecreditsearned)

label var cumcollegecreditsearned "cumulative college-level credits earned by a student term to term"

<span class="stcmt">// Generate cumulative credits earned by term</span>

bys studentid (cohorttermindex): gen cumcreditsearned = sum(creditsearned)

label var cumcreditsearned "cumulative credits earned by a student term to term, whether college-level or developmental credits"

<span class="stcmt">// Generate cumulative college-level credits attempted by term</span>

bys studentid (cohorttermindex): gen cumcollegecreditsattempted = sum(collegecreditsattempted)

label var cumcollegecreditsattempted "cumulative college-level credits attempted by a student term to term"

<span class="stcmt">// Determine number of terms included in data for each student</span>

sum cohorttermindex

global max_term = r(max)	

<span class="stcmt">// Generate ideal credits earned and cumulative credits earned amounts</span>

gen idealcreditsearned = 0

label var idealcreditsearned "ideal number of credits a student would earn each term"

replace idealcreditsearned = 15 if inrange(cohorttermindex, 1, 4)

bys studentid (cohorttermindex): gen cumidealcreditsearned = sum(idealcreditsearned)

label var cumidealcreditsearned "cumulative ideal number of credits a student would have earned each term"

<span class="stcmt">// Code in an indicator for a terminating event (first completion or first transfer)</span>

gen terminating = inlist(pathway, 100, 101)	

label var terminating "indicator for a terminating event: first completion or transfer"

<span class="stcmt">// Create cumulative credit charts</span>

<span class="stcmt">// Avg. college-level cumulative credits attempted vs. earned</span>

preserve

collapse (mean) cumcollegecreditsearned cumcollegecreditsattempted cumidealcreditsearned, by(entry_pathway cohorttermindex)

twoway (line cumcollegecreditsearned cohorttermindex, lcolor("51 34 136")) (line cumcollegecreditsattempted cohorttermindex, lcolor("68 170 153") lpattern(dash)) (line cumidealcreditsearned cohorttermindex, lcolor("136 34 85")), by(entry_pathway, graphregion(fcolor(white)) imargin(medium) title("Average Cumulative College-Level Credits" "Attempted vs. Earned") note("Note: College-level credit counts exclude developmental coursework.", size(vsmall))) legend(label(1 "Earned") label(2 "Attempted") label(3 "On-Track")) yline(0, lcolor(black)) plotregion(margin(zero)) ytitle("Avg. Cumulative College-Level Credits") xtitle("Cohort Term") ylabel(0(15)60) xlabel(1(1)${max_term}) <span class="stcmt">// colors specifically chosen to be colorblind accessible</span>

graph export "${saved_graphs}/1_avg_cum_college-level_credits_attempted_vs_earned.png", replace

restore	

